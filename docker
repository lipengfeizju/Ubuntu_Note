交互式容器
docker run -i -t ubuntu:15.10 /bin/bash
后台模式
docker run -d ubuntu /bin/sh -c "while true; do echo hello world; sleep 1; done"
docker ps
docker logs 2b1b7a428627
端口映射
docker run -d -p 8200:5000 training/webapp python app.py
端口信息
docker port frosty_babbage
docker logs -f frosty_babbage

显卡docker
nvidia-docker run -ti bvlc/caffe:gpu caffe --version
挂载系统文件
nvidia-docker run -ti -v /export/home/pli32/workspace/:/share bvlc/caffe:gpu /bin/bash
生成镜像（image）
nvidia-docker commit c034528e3327 pli32/geo_con

存储镜像
https://my.oschina.net/zjzhai/blog/225112
增加tag
nvidia-docker tag 418c8352dc2d pli32/geo_con:dev
删除tag
docker rmi -f hub.doge.com/ubuntu:latest

nvidia-docker run -ti -p 8200:8200 -v /export/home/pli32/workspace/:/share pli32/geo_con:dev /bin/bash


torch镜像准备

docker pull nightseas/cuda-torch:latest
sudo apt-get install libhdf5-serial-dev hdf5-tools tmux
git clone https://github.com/deepmind/torch-hdf5
cd torch-hdf5
luarocks make hdf5-0-0.rockspec LIBHDF5_LIBDIR="/usr/lib/x86_64-linux-gnu/"

运行docker
```
$ nvidia-docker run -ti \
--name kris_keypoint \
-p 8200:8200 \
--mount type=bind,source=/work_10t/pli32/docker_share,target=/share \
diva_geo:latest /bin/bash

```shell


$ nvidia-docker run -ti \
--name kris_keypoint \
-p 8200:8200 \
--mount type=bind,source=/work_10t/pli32/docker_share,target=/share \
diva_geo:latest /bin/bash

sudo docker run -it \
--name occ_net \
--gpus all \
-p 8700:8700 \
--mount type=bind,source=/work_4t/data_share,target=/share \
occlusion_net:latest /bin/bash

